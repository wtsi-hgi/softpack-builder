{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":""},{"location":"#softpack-builder","title":"SoftPack Builder","text":"<p>SoftPack Builder provides services for building SoftPack environments.</p> <ul> <li>Documentation: https://wtsi-hgi.github.io/softpack-builder</li> <li>GitHub: https://github.com/wtsi-hgi/softpack-builder</li> <li>PyPI: https://pypi.org/project/softpack-builder/</li> <li>Free software: MIT</li> </ul>"},{"location":"#features","title":"Features","text":"<ul> <li>Delivers cross-platform software packaging environments for reproducible research.</li> <li>Includes integrated management and monitoring of build flows using Prefect.</li> <li>Supports distributed and parallel builds using Dask for seamless scalability.</li> </ul>"},{"location":"#installation","title":"Installation","text":""},{"location":"#stable-release","title":"Stable release","text":"<p>To install SoftPack Builder, run this command in your terminal:</p> <pre><code>$ pip install softpack-builder\n</code></pre> <p>This is the preferred method to install SoftPack Builder, as it will always install the most recent stable release.</p> <p>If you don't have pip installed, this Python installation guide can guide you through the process.</p>"},{"location":"#from-source","title":"From source","text":"<p>The source for SoftPack Builder can be downloaded from the Github repo.</p> <p>You can either clone the public repository:</p> <pre><code>$ git clone https://github.com/wtsi-hgi/softpack-builder.git\n</code></pre> <p>Or download the tarball:</p> <pre><code>$ curl -OJL https://github.com/wtsi-hgi/softpack-builder/tarball/master\n</code></pre> <p>Once you have a copy of the source, you can install it with:</p> <pre><code>$ pip install .\n</code></pre>"},{"location":"#development","title":"Development","text":"<p>For development mode, clone the repository and use Poetry to install the package.</p> <pre><code>$ git clone https://github.com/wtsi-hgi/softpack-builder.git\n</code></pre> <p>Install Poetry:</p> <pre><code>$ pip install poetry\n</code></pre> <p>Install Poetry environments for development:</p> <pre><code>poetry install --with dev,doc,test\n</code></pre> <p>Run tests with Tox</p> <pre><code>poetry run tox\n</code></pre> <p>Run MkDocs server to view documentation:</p> <pre><code>poetry run mkdocs serve\n</code></pre>"},{"location":"#credits","title":"Credits","text":"<p>This package was created with Cookiecutter and the altaf-ali/cookiecutter-pypackage project template.</p> <p>SoftPack mascot and logo courtesy of Cartoon Vectors by Vecteezy.</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#changelog","title":"Changelog","text":""},{"location":"changelog/#010-2023-03-06","title":"0.1.0 (2023-03-06)","text":"<ul> <li>First release on PyPI.</li> </ul>"},{"location":"contributing/","title":"Contributing","text":""},{"location":"contributing/#contributing","title":"Contributing","text":"<p>Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given.</p> <p>You can contribute in many ways:</p>"},{"location":"contributing/#types-of-contributions","title":"Types of Contributions","text":""},{"location":"contributing/#report-bugs","title":"Report Bugs","text":"<p>Report bugs at https://github.com/wtsi-hgi/softpack-builder/issues.</p> <p>If you are reporting a bug, please include:</p> <ul> <li>Your operating system name and version.</li> <li>Any details about your local setup that might be helpful in troubleshooting.</li> <li>Detailed steps to reproduce the bug.</li> </ul>"},{"location":"contributing/#fix-bugs","title":"Fix Bugs","text":"<p>Look through the GitHub issues for bugs. Anything tagged with \"bug\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"contributing/#implement-features","title":"Implement Features","text":"<p>Look through the GitHub issues for features. Anything tagged with \"enhancement\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"contributing/#write-documentation","title":"Write Documentation","text":"<p>SoftPack Builder could always use more documentation, whether as part of the official SoftPack Builder docs, in docstrings, or even on the web in blog posts, articles, and such.</p>"},{"location":"contributing/#submit-feedback","title":"Submit Feedback","text":"<p>The best way to send feedback is to file an issue at https://github.com/wtsi-hgi/softpack-builder/issues.</p> <p>If you are proposing a feature:</p> <ul> <li>Explain in detail how it would work.</li> <li>Keep the scope as narrow as possible, to make it easier to implement.</li> <li>Remember that this is a volunteer-driven project, and that contributions   are welcome :)</li> </ul>"},{"location":"contributing/#get-started","title":"Get Started!","text":"<p>Ready to contribute? Here's how to set up <code>softpack-builder</code> for local development.</p> <ol> <li>Fork the <code>softpack-builder</code> repo on GitHub.</li> <li> <p>Clone your fork locally</p> <pre><code>$ git clone https://github.com/wtsi-hgi/softpack-builder.git\n</code></pre> </li> <li> <p>Ensure poetry is installed.</p> </li> <li> <p>Install dependencies and start your virtualenv:</p> <pre><code>$ poetry install -E test -E doc -E dev\n</code></pre> </li> <li> <p>Create a branch for local development:</p> <pre><code>$ git checkout -b name-of-your-bugfix-or-feature\n</code></pre> <p>Now you can make your changes locally.</p> </li> <li> <p>When you're done making changes, check that your changes pass the    tests, including testing other Python versions, with tox:</p> <pre><code>$ poetry run tox\n</code></pre> </li> <li> <p>Commit your changes and push your branch to GitHub:</p> <pre><code>$ git add .\n$ git commit -m \"Your detailed description of your changes.\"\n$ git push origin name-of-your-bugfix-or-feature\n</code></pre> </li> <li> <p>Submit a pull request through the GitHub website.</p> </li> </ol>"},{"location":"contributing/#pull-request-guidelines","title":"Pull Request Guidelines","text":"<p>Before you submit a pull request, check that it meets these guidelines:</p> <ol> <li>The pull request should include tests.</li> <li>If the pull request adds functionality, the docs should be updated. Put    your new functionality into a function with a docstring, and add the    feature to the list in README.md.</li> <li>The pull request should work for Python 3.8, 3.9, 3.10, and 3.11. Check    https://github.com/wtsi-hgi/softpack-builder/actions    and make sure that the tests pass for all supported Python versions.</li> </ol>"},{"location":"contributing/#tips","title":"Tips","text":"<pre><code>$ poetry run pytest tests/test_softpack_builder.py\n</code></pre> <p>To run a subset of tests.</p>"},{"location":"contributing/#deploying","title":"Deploying","text":"<p>A reminder for the maintainers on how to deploy. Make sure all your changes are committed (including an entry in CHANGELOG.md). Then run:</p> <pre><code>$ poetry run bump2version patch # possible: major / minor / patch\n$ git push\n$ git push --tags\n</code></pre> <p>GitHub Actions will then deploy to PyPI if tests pass.</p>"},{"location":"guides/how-to-start-a-build/","title":"How to start a build","text":"<p>Info</p> <p>This documentation is under development and may be incomplete.</p> <p>SoftPack Builder starts a build automatically as it receives a webhook from SoftPack Artifacts repo when a new input spec is pushed.</p> <p>For development or debugging purposes, a build can be started manually using the command line as well.</p>"},{"location":"reference/api/","title":"Python API","text":"<p>Info</p> <p>This documentation is under development and may be incomplete.</p> <p>To use SoftPack Builder in a project</p> <pre><code>import softpack_builder\n</code></pre>"},{"location":"reference/cli/","title":"Command Line Interface","text":"<p>Info</p> <p>This documentation is under development and may be incomplete.</p> <pre><code>Usage: softpack-builder [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  --install-completion          Install completion for the current shell.\n  --show-completion             Show completion for the current shell, to copy\n                                it or customize the installation.\n  --help                        Show this message and exit.\n\nCommands:\n  build                         Start a build.\n  status                        Show service status.\n</code></pre>"},{"location":"reference/cli/#commands","title":"Commands","text":"<p>TODO</p> <p>Command line documentation goes here</p>"},{"location":"reference/rest/","title":"REST API","text":"<p>Info</p> <p>This documentation is under development and may be incomplete.</p> <p></p>"},{"location":"topics/design/","title":"Design","text":"<p>Info</p> <p>This documentation is under development and may be incomplete.</p> <p>SoftPack Builder is a lightweight service that builds container images and other related artifacts for a software environment based on a list of end-user requirements.</p> <pre><code>flowchart TB\n    classDef dashed_container fill:#FFFFFF, stroke-dasharray:4;\n\n    subgraph softpack_artifacts[\"SoftPack Artifacts (GitLab)\"]\n      softpack_env(fa:fa-file-lines &lt;strong&gt;Environment Definitions&lt;/strong&gt; &lt;br/&gt; Spack environment files)\n      softpack_modules(fa:fa-box-archive &lt;strong&gt;Module Files&lt;/strong&gt; &lt;br/&gt; For use with module command)\n      softpack_images(fa:fa-box-open &lt;strong&gt;Container Images&lt;/strong&gt; &lt;br/&gt; Docker/Singularity images)\n      softpack_env --- softpack_images\n      softpack_images --- softpack_modules\n    end\n    class softpack_artifacts dashed_container;\n    linkStyle 0 stroke-width:0px;\n    linkStyle 1 stroke-width:0px;\n\n    softpack_builder(fa:fa-gears &lt;strong&gt;SoftPack Builder&lt;/strong&gt; &lt;br/&gt; Builds container images and module files)\n\n    softpack_builder --&gt;|\"REST API (GitLab, Docker Registry) / HTTP\"| softpack_artifacts</code></pre>"},{"location":"topics/design/#build-execution","title":"Build execution","text":"<p>SoftPack Builder uses Prefect to execute the build flows. The build flow is responsible for taking the input spec (received through a webhook or the command line) and converting it to a container image that can be deployed to the target system. The build flow carries out the following tasks:</p> <ul> <li>Create a spack environment file from input spec</li> <li>Start spack build</li> <li>Create contanier image</li> <li>Create module file</li> <li>Push to artifacts repo<ul> <li>spack environment file</li> <li>spack lock file</li> <li>container image</li> <li>module file</li> </ul> </li> </ul>"},{"location":"topics/design/#input-spec","title":"Input spec","text":"<p>The input spec provides a list of platform-agnostic requirements for building a software environment.</p> Attribute Type name string description string packages string[]"},{"location":"topics/design/#sequence-diagram","title":"Sequence diagram","text":"<pre><code>sequenceDiagram\n  autonumber\n  participant softpack_artifacts as SoftPack Artifacts\n  participant softpack_builder as SoftPack Builder\n  participant prefect_flow as Prefect Flow\n  participant task_runner as Task Runner\n\n  softpack_artifacts -&gt;&gt; softpack_builder: Input spec\n  softpack_builder -&gt;&gt; softpack_artifacts: Environment spec\n  softpack_builder -&gt;&gt; prefect_flow: Build environment\n  prefect_flow -&gt;&gt; task_runner: Start spack build\n  activate task_runner\n  prefect_flow -&gt;&gt; task_runner: Create container image\n  prefect_flow -&gt;&gt; task_runner: Create module file\n  prefect_flow -&gt;&gt; task_runner: Save artifacts\n  task_runner -&gt;&gt; softpack_artifacts: Push artifacts\n  deactivate task_runner\n</code></pre> <p>All tasks within the build flow are defined as asynchronous tasks to allow scalability by running the tasks in a distributed environment. Within a flow itself, sequential dependencies between tasks are handled by passing a PrefectFuture from one task as input to the next.</p>"},{"location":"topics/design/#clutser-setup","title":"Clutser setup","text":"<p>TODO</p> <p>Add cluster setup</p>"},{"location":"topics/design/#glossary","title":"Glossary","text":"<p>TODO</p> <p>Add glossary</p>"},{"location":"tutorials/getting_started/","title":"Getting Started","text":""},{"location":"tutorials/getting_started/#getting-started","title":"Getting Started","text":"<p>Info</p> <p>This documentation is under development and may be incomplete.</p>"}]}